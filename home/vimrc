"start Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'

"--- Overall behaviors ---

"molokai
"A color theme (only used in gvim)
Plugin 'tomasr/molokai'

"vim-airline
Plugin 'bling/vim-airline'

"vim-bufferline
Plugin 'bling/vim-bufferline'
let g:bufferline_show_bufnr = 0
let g:bufferline_rotate = 1
let g:bufferline_fixed_index = -1

"vim-easymotion (quick move motion support, \\motion)
Plugin 'Lokaltog/vim-easymotion'

"bufkill.vim (Keep window layout when killing buffers)
Plugin 'bufkill.vim'
cnorea <expr> bd (getcmdtype() == ':' ? 'BD' : 'bd')
cnorea <expr> bw (getcmdtype() == ':' ? 'BW' : 'bd')
cnorea <expr> bun (getcmdtype() == ':' ? 'BUN' : 'bd')
noremap <C-TAB> :bn<CR>
noremap <C-S-TAB> :bp<CR>

"lusty (LustyExplorer + LustyJuggler)
Plugin 'sjbach/lusty'

"nerdtree (file explorer window)
Plugin 'scrooloose/nerdtree'
let NERDTreeMinimalUI = 1
let NERDTreeShowBookmarks = 1
let NERDTreeWinSize = 18
let NERDTreeChDirMode = 2
noremap <Leader>n :NERDTreeToggle<CR>

"delimitMate (match pairs)
Plugin 'Raimondi/delimitMate'
let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1
let delimitMate_excluded_regions = "Comment,String"
let delimitMate_balance_matchpairs = 1

"vim-table-mode (toggled by \tm, and then start a line with ||)
Plugin 'dhruvasagar/vim-table-mode'

"NERDCommenter
Plugin 'scrooloose/nerdcommenter'

"--- Indent enhancement ---

"indentLine (show indent lines)
Plugin 'Yggdroot/indentLine'

"guessindent (guess indent method based on files)
Plugin 'ogier/guessindent'
let g:guessindent_prefer_tabs = 1
"FileType is needed since some ftplugin (e.g. Python) will override indention
"settings
autocmd BufReadPost,BufEnter,FileType * GuessIndent

"--- General coding ---

"YouCompleteMe
Plugin 'Valloric/YouCompleteMe'
let g:ycm_global_ycm_extra_conf = '/home/robot/.vim/bundle/YouCompleteMe/ycm_extra_conf_default.py'
let g:ycm_min_num_of_chars_for_completion = 3
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_key_invoke_completion = '<C-k>'
noremap <F5> :YcmForceCompileAndDiagnostics<CR>
autocmd FileType c,cpp
	\ noremap <buffer> <Leader>e :YcmDiags<CR>

"syntastic
Plugin 'scrooloose/syntastic'
"This must be disabled! Otherwise when openning C/C++ files,
"syntastic will use its own checker to run a check, overwrite YCM.
"let g:syntastic_check_on_open = 1
let g:syntastic_loc_list_height = 5
let g:syntastic_python_checkers = ['flake8']
noremap <Leader>e :Errors<CR>

"-- PHP --

"phpcomplete.vim (stronger than vim's original one)
Plugin 'shawncplus/phpcomplete.vim'

"php-doc-upgrade (PHPDoc)
Plugin 'php-doc-upgrade'
let g:pdv_cfg_Author="Hexcles Ma <bob1211(at)gmail(dot)com>"
let g:pdv_cfg_Copyright="2014"
let g:pdv_cfg_License="Proprietary"
au FileType php
	\ nnoremap <buffer> <Leader>p :call PhpDocSingle()<CR> |
	\ vnoremap <buffer> <Leader>p :call PhpDocRange()<CR>

"-- Python --

"Highlight unnecessary whitespace and format errors
let python_highlight_all = 1

"vim-python-pep8-indent (make the indent compatible with PEP8)
Plugin 'hynek/vim-python-pep8-indent'

"-- Other languages --

"vim-markdown (advanced support for Markdown, e.g. navigation)
Plugin 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled = 1

"vim-css3-syntax (full CSS3 support including partial Scss)
Plugin 'hail2u/vim-css3-syntax'

"vim-css-color (show background color for CSS color definitions)
Plugin 'ap/vim-css-color'

"vim-less
Plugin 'groenewege/vim-less'

"vim-stylus
Plugin 'wavded/vim-stylus'

"vim-coffee-script
Plugin 'kchmck/vim-coffee-script'

"manpageview (show man page at cursor, [count]K in normal mode)
Plugin 'dkasak/manpageview'

"django.vim (Django template syntax support)
Plugin 'django.vim'

"vim-jade
Plugin 'digitaltoad/vim-jade'

"inline_edit
"Automatically switch to other syntax inside embedded code block
"(e.g. JavaScript in HTML)
Plugin 'AndrewRadev/inline_edit.vim'

call vundle#end()
filetype plugin indent on
"end Vundle

"--- Non-plugin settings ---

"Fix alt/meta key in GNOME terminal
let c='a'
while c <= 'z'
  exec "set <A-".c.">=\e".c
  exec "imap \e".c." <A-".c.">"
  let c = nr2char(1+char2nr(c))
endw
"Set a very short keycode timeout so that <A-x> will not be confused with <ESC>x
set ttimeout ttimeoutlen=50

"persistent undo
set undofile
set undodir=$HOME/.vim/undo

"preview window
set previewheight=2

"Always show statusline (needed by vim-airline)
set laststatus=2

"Window navigation and resizing
noremap <C-J> <C-W>j
noremap <C-K> <C-W>k
noremap <C-H> <C-W>h
noremap <C-L> <C-W>l
noremap <A-h> <C-w><
noremap <A-j> <C-W>-
noremap <A-k> <C-W>+
noremap <A-l> <C-w>>
